# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = fmt, lint, unit

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
lib_path = {toxinidir}/lib/charms/pgbouncer_k8s
all_path = {[vars]src_path} {[vars]tst_path} {[vars]lib_path}

[testenv]
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    flake8==4.0.1
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
    codespell
commands =
    codespell {toxinidir} --skip {toxinidir}/.git --skip {toxinidir}/.tox \
      --skip {toxinidir}/build --skip {toxinidir}/lib --skip {toxinidir}/venv \
      --skip {toxinidir}/.mypy_cache --skip {toxinidir}/LICENSE
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
deps =
    pytest
    psycopg2-binary
    coverage[toml]
    -r{toxinidir}/requirements.txt
commands =
    coverage run --source={[vars]src_path},{[vars]lib_path}  \
        -m pytest --ignore={[vars]tst_path}integration -v --tb native -s {posargs}
    coverage report

[testenv:dev-integration]
description = Run integration tests marked dev
deps =
    pytest
    juju==2.9.11
    lightkube==0.10.0
    psycopg2-binary
    pytest-operator>0.17.0
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs} \
        --durations=0 --asyncio-mode=auto -m dev

[testenv:smoke-integration]
description = Run smoke integration tests to verify basic charm function works
deps =
    pytest
    juju==2.9.11
    lightkube==0.10.0
    psycopg2-binary
    pytest-operator>0.17.0
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs} \
        --durations=0 --asyncio-mode=auto -m smoke

[testenv:standalone-integration]
description = Run integration tests for standalone charm function
deps =
    pytest
    juju==2.9.11
    lightkube==0.10.0
    psycopg2-binary
    pytest-operator>0.17.0
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs} \
        --durations=0 --asyncio-mode=auto -m standalone

[testenv:backend-integration]
description = Run integration tests for backend relation
deps =
    pytest
    juju==2.9.11
    lightkube==0.10.0
    psycopg2-binary
    pytest-operator>0.17.0
    requests
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs} \
        --durations=0 --asyncio-mode=auto -m backend

[testenv:client-relation-integration]
description = Run integration tests for modern client relations
deps =
    pytest
    juju==2.9.11
    lightkube==0.10.0
    psycopg2-binary
    pytest-operator
    requests
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs} \
        --durations=0 --asyncio-mode=auto -m client_relation

[testenv:legacy-client-relation-integration]
description = Run integration tests for legacy client relations
deps =
    pytest
    juju==2.9.11
    lightkube==0.10.0
    psycopg2-binary
    pytest-operator
    requests
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs} \
        --durations=0 --asyncio-mode=auto -m legacy_relation

[testenv:scaling-integration]
description = Run integration tests for scaling
deps =
    pytest
    juju==2.9.11
    lightkube==0.10.0
    psycopg2-binary
    pytest-operator
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs} \
        --durations=0 --asyncio-mode=auto -m scaling


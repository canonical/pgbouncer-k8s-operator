# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = lint, unit

[vars]
src_path = "{tox_root}/src"
tests_path = "{tox_root}/tests"
lib_path = "{tox_root}/lib/charms/pgbouncer_k8s"
all_path = {[vars]src_path} {[vars]tests_path} {[vars]lib_path}

[testenv]
set_env =
    PYTHONPATH = {tox_root}/lib:{tox_root}/src
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS
allowlist_externals =
    poetry

[testenv:format]
description = Apply coding style standards to code
commands_pre =
    poetry install --only format --no-root
commands =
    poetry lock
    poetry run ruff check --fix {[vars]all_path}
    poetry run ruff format {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
commands_pre =
    poetry install --only lint,format --no-root
commands =
    poetry check --lock
    poetry run codespell "{tox_root}" --skip "{tox_root}/.git" --skip "{tox_root}/.tox" \
      --skip "{tox_root}/build" --skip "{tox_root}/lib" --skip "{tox_root}/venv" \
      --skip "{tox_root}/.mypy_cache" --skip "{tox_root}/LICENSE" --skip "{tox_root}/poetry.lock" \
      --skip "{tox_root}/docs"
    poetry run codespell {[vars]lib_path}
    # pflake8 wrapper supports config from pyproject.toml
    poetry run ruff check {[vars]all_path}
    poetry run ruff format --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
commands_pre =
    poetry install --only main,charm-libs,unit --no-root
    # Temporary pre-release ops[tracing]
    pip install \
        'ops@https://github.com/dimaqq/operator/archive/refs/tags/2.20.0-rc21.zip' \
        'ops-tracing@https://github.com/dimaqq/operator/archive/refs/tags/2.20.0-rc21.zip\#subdirectory=tracing&egg=ops-tracing'
commands =
    poetry run coverage run --source={[vars]src_path},{[vars]lib_path}  \
        -m pytest -v --tb native -s {posargs} {[vars]tests_path}/unit
    poetry run coverage report
    poetry run coverage xml

[testenv:integration]
description = Run integration tests
pass_env =
    CI
commands_pre =
    poetry install --only integration --no-root
commands =
    poetry run pytest -v --tb native --log-cli-level=INFO -s --ignore={[vars]tests_path}/unit/ {posargs}

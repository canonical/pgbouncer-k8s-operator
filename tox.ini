# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = lint, unit

[vars]
src_path = {tox_root}/src
tests_path = {tox_root}/tests
lib_path = {tox_root}/lib/charms/pgbouncer_k8s
all_path = {[vars]src_path} {[vars]tests_path} {[vars]lib_path}

[testenv]
set_env =
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS

[testenv:format]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    flake8
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
    codespell
commands =
    codespell {tox_root} --skip {tox_root}/.git --skip {tox_root}/.tox \
      --skip {tox_root}/build --skip {tox_root}/lib --skip {tox_root}/venv \
      --skip {tox_root}/.mypy_cache --skip {tox_root}/LICENSE
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
deps =
    pytest
    pytest-asyncio
    psycopg2-binary
    coverage[toml]
    -r {tox_root}/requirements.txt
commands =
    coverage run --source={[vars]src_path},{[vars]lib_path}  \
        -m pytest -v --tb native -s {posargs} {[vars]tests_path}/unit
    coverage report

[testenv:standalone-integration]
description = Run integration tests for standalone charm function
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    pytest
    juju~=2.9.0 # Latest juju 2
    lightkube==0.10.0
    psycopg2-binary
    pytest-operator>0.17.0
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s --durations=0 {posargs} {[vars]tests_path}/integration/test_charm.py

[testenv:backend-integration]
description = Run integration tests for backend relation
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    pytest
    juju~=2.9.0 # Latest juju 2
    lightkube==0.10.0
    psycopg2-binary
    pytest-operator>0.17.0
    requests
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s --durations=0 {posargs} {[vars]tests_path}/integration/relations/test_backend_database.py

[testenv:client-relation-integration]
description = Run integration tests for modern client relations
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    pytest
    juju~=2.9.0 # Latest juju 2
    lightkube==0.10.0
    psycopg2-binary
    pytest-operator
    requests
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s --durations=0 {posargs} {[vars]tests_path}/integration/relations/pgbouncer_provider/test_pgbouncer_provider.py

[testenv:legacy-client-relation-integration]
description = Run integration tests for legacy client relations
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    pytest
    juju~=2.9.0 # Latest juju 2
    lightkube==0.10.0
    psycopg2-binary
    pytest-operator
    requests
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s --durations=0 {posargs} {[vars]tests_path}/integration/relations/test_db.py

[testenv:legacy-client-relation-integration-admin]
description = Run integration tests for legacy client admin relations
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    pytest
    juju~=2.9.0 # Latest juju 2
    lightkube==0.10.0
    psycopg2-binary
    pytest-operator
    requests
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s --durations=0 {posargs} {[vars]tests_path}/integration/relations/test_db_admin.py

[testenv:scaling-integration]
description = Run integration tests for scaling
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    pytest
    juju~=2.9.0 # Latest juju 2
    lightkube==0.10.0
    psycopg2-binary
    pytest-operator
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s --durations=0 {posargs} {[vars]tests_path}/integration/relations/test_peers.py

[testenv:tls-integration]
description = Run TLS integration tests
pass_env =
    {[testenv]pass_env}
    CI
    CI_PACKED_CHARMS
deps =
    pytest
    juju~=2.9.0 # Latest juju 2
    lightkube==0.10.0
    psycopg2-binary
    pytest-operator
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s --durations=0 {posargs} {[vars]tests_path}/integration/test_tls.py
